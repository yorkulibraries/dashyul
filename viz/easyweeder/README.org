#+TITLE: Easy Weeder
#+AUTHOR: William Denton

#+OPTIONS: num:nil ^:{} toc:nil

#+LATEX_HEADER: \hypersetup{colorlinks=true,urlcolor=blue,linkcolor=blue,pdfborder={0 0 0}}
#+LATEX_HEADER: \usepackage[english]{babel} % English language/hyphenation

#+STARTUP: latexpreview showall

* About

Easy Weeder is an algorithm that identifies little-used multiple copies of books and recommends how many copies we really need (minimum 1).

* Busy factor

The /busy factor/ will determine which books with multiple copies can be easily weeded.

First note that our calculations will be based on circs in a "circ window" of five years: the last five full academic years, plus the current year to date (so near the end of an academic year this will be almost six years).  In April 2018 the circ window includes all of academic 2012, 2013, 2014, 2015, 2106 and also academic 2017 from September 2017 to March 2018.

This means we know three things for each title:

+ the number of copies (this is actually "number of items with the same call number," so multiple copies of the same title are counted together, but four separate volumes in a four-volume set are not);
+ the number of circs of all those copies in the circ window; and
+ the length of circ window (defined as 5 years).

We can combine these into a measure of "circs per copy per year," or how many times a year (on average, over the last five years) each copy of a title circulates.

Define the /busy factor/ to be number of circs divided by number of copies divided by length in years of the circ window.

#+name: eqn_1
\begin{equation}
busy = \frac{\frac{circs}{copies}}{years}
\end{equation}

Some examples:

| circs | copies | window | busy |
|-------+--------+--------+------|
|    10 |      1 |      5 |    2 |
|     5 |      1 |      5 |    1 |
|     7 |      2 |      5 |  0.7 |
|     2 |      1 |      5 |  0.4 |
|     1 |      2 |      5 |  0.4 |
|     2 |     19 |      5 | 0.02 |
|   698 |      2 |      5 | 69.8 |

The last two are real examples: Francis Bacon's /[[https://www.library.yorku.ca/find/Record/567179][Advancement of Learning, and New Atlantis]]/ has a busy factor of 0.02, and /[[https://www.library.yorku.ca/find/Record/2914459][Economics: Canada in the Global Environment]]/ is at 69.8, probably because it used to be on reserve but is now in the stacks.

Further, let us set a /target busy factor/ of 1.  That means in an ideal situation, if we have more than one copy of a book, each is used once a year.  (If we only have one copy of a title then Easy Weeder is not used, so its busy factor is not used.)

* Assumptions

1. We don't keep two copies of a book in the circulating collection just in case one gets lost.
2. To minimize human oversight, we will always keep at least 1 copy of a title.  Weeding all copies of a title goes beyond Easy Weeder's scope.
3. The inventory is accurate.  (If it is not, it can be corrected as weeding is done, and anyway that would rarely affect the number of copies that Easy Weeder will recommend: if we think we have four copies of something but only need one, it doesn't matter that really we only have three.)

* How the logic and calculations work

#+NAME: logic
#+BEGIN_SRC ditaa :file logic-flow.png :cmdline -r
+--------------+
|              |   +-----+   +-------------+
|  busy ≥ 1 ?  +---+ yes +---+ do not weed |
|              |   +-----+   +-------------+
+-----+--------+
      |
   +--+-+
   | no |
   +-+--+
     |
+----+-------------+
|                  |
| how many copies? +
|                  |
+-+---+------------+
  |   |
  | +-+-+   +----------------+
  | + 1 +---+ leave it alone |
  | +---+   +----------------+
  |
+-+-+   +-------------------------------------+
+ 2 +---+ calculate maximum number (≥ 1) of   |
+---+   | copies to raise busy factor to ≥ 1  |
        +-------------------------------------+
#+END_SRC

#+ATTR_LATEX: :height 3in
#+CAPTION: Easy Weeder logic
#+NAME: fig_logic
#+RESULTS: logic
[[file:logic-flow.png]]

To revisit the examples above, two are ignored because their busy factor is >= 1.  For the remaining four we can calculate the recommended number of copies we should keep.  Figure [[fig_logic]] shows the decisions made.

For example, for the one with 19 copies, and 2 circs, the calculation goes:

+ 19 copies is too many.  18 → busy = 0.022.
+ 18 copies is too many.  17 → busy = 0.024.
+ …
+ 5 copies is too many.  4 → busy = 0.1.
+ 4 copies is too many.  3 → busy = 0.133.
+ 3 copies is too many.  2 → busy = 0.2.
+ 2 copies is too many. Keep 1 copy.

As it happens, for all four we end up keeping just one copy.

| circs | copies | window | busy | rec_copies  |
|-------+--------+--------+------+-------------|
|     7 |      2 |      5 |  0.7 |           1 |
|     2 |      1 |      5 |  0.4 |           1 |
|     1 |      2 |      5 |  0.4 |           1 |
|     2 |     19 |      5 | 0.02 |           1 |

But, for example, let's say we had a book that had 6 copies and 12 circs over the last 5 years, for a busy factor of 0.4.  We would keep 2 copies.

+ 6 copies is too many.  5 → busy = 0.48.
+ 5 copies is too many.  4 → busy = 0.6.
+ 4 copies is too many.  3 → busy = 0.8.
+ 3 copies is too many.  2 → busy = 1.2.
+ Keep 2 copies.  (2 is the largest number giving a busy factor >= 1.)

* Estimated easy weedables (April 2018)

** Space measurements

Rules of thumb for how many books fit into a space:

| 30 books  | is | 1 shelf  |
| 7 shelves | is | 1 bay    |
| 10 bays   | is | 1 row    |
| 2 rows    | is | 1 range  |

Therefore, one stack holds \(30 \times 7 = 210\) books, one range holds \(210 \times 10 = 2100\) books and one row holds \(2100 \times 2 = 4200\) books.  Some ranges have fewer stacks, and some shelves hold more books, but these are good enough for estimates.

** By branch

#+BEGIN_SRC R :session R:easyweeder :results silent :exports none
library(tidyverse)
easyweeder_data_dir <-  paste0(Sys.getenv("DASHYUL_DATA"), "/viz/easyweeder/")
easy_weedable <- read_csv(paste0(easyweeder_data_dir, "easy-weedable.csv"))
#+END_SRC

#+BEGIN_SRC R :session R:easyweeder :results value :exports results :colnames yes
easy_weedable %>% count(home_location, wt = weedable) %>% mutate(stacks = round(n / 210), rows = round(n / 4200))
#+END_SRC

#+RESULTS:
| home_location |      n | stacks | rows |
|---------------+--------+--------+------|
| BRONFMAN      |    842 |      4 |    0 |
| FROST         |   2050 |     10 |    0 |
| LAW           |    602 |      3 |    0 |
| SCOTT         | 117069 |    557 |   28 |
| STEACIE       |    883 |      4 |    0 |

** By branch and class letter

# circ_metrics %>% filter(control_number == "a1351697")
# Ken McR's book

#+BEGIN_SRC R :session R:easyweeder :results value :exports results :colnames yes
easy_weedable %>%
    mutate(lc_letter = substr(call_number, 0, 1)) %>%
    count(home_location, lc_letter, wt = weedable) %>%
    spread(home_location, n, fill = "")
#+END_SRC

#+ATTR_LATEX: :environment longtable
#+RESULTS:
| lc_letter | BRONFMAN | FROST | LAW | SCOTT | STEACIE |
|-----------+----------+-------+-----+-------+---------|
| A         |          |       |     |   308 |         |
| B         |          |    89 |   2 | 14612 |         |
| C         |          |     2 |     |  1095 |       2 |
| D         |          |    83 |   1 |  9966 |       1 |
| E         |          |    43 |   5 |  4382 |         |
| F         |          |   383 |   5 |  8300 |         |
| G         |        1 |    12 |     |  5296 |      16 |
| H         |      816 |   433 |  80 | 20388 |      32 |
| J         |        1 |   156 |  17 |  2645 |         |
| K         |        2 |    13 | 411 |  1372 |       3 |
| L         |        1 |    10 |   5 |  2325 |       1 |
| M         |          |     1 |     |  1461 |       1 |
| N         |        3 |    13 |   2 |  6751 |         |
| P         |        2 |   757 |   7 | 30113 |       1 |
| Q         |        1 |    21 |     |   743 |     568 |
| R         |        2 |    16 |   8 |  5012 |     150 |
| S         |          |     2 |     |   157 |      19 |
| T         |       13 |     5 |   2 |   769 |      79 |
| U         |          |     9 |     |   737 |       1 |
| V         |          |       |     |    44 |         |
| X         |          |       |  46 |       |         |
| Z         |          |     2 |  11 |   593 |       9 |

** Scott spreadsheet                                                                                                   :noexport:

#+BEGIN_SRC R :session R:easyweeder :results none :exports results :colnames yes
library(openxlsx)
library(gtools)
scott_first_letters <- easy_weedable %>%
    select(call_number) %>%
    mutate(first_letter = substr(call_number, 0, 1)) %>%
    select(first_letter) %>%
    distinct() %>%
    pull()

easy_weedable <- easy_weedable[mixedorder(easy_weedable$call_number), ]
#+END_SRC

#+BEGIN_SRC R :session R:easyweeder :results value :exports results :colnames yes
scott_xl <- createWorkbook("Scott Easy Weedables")
for (i in scott_first_letters) {
   addWorksheet(scott_xl, i)
   weedable_in_letter <- easy_weedable %>%
       filter(home_location == "SCOTT", grepl(paste0("^", i), call_number)) %>%
       select(-lc_letters) %>%
       ## For some reason using the whole string corrupts the export
       mutate(title_author = substr(title_author, 0, 50))
   writeData(scott_xl, sheet = i, weedable_in_letter)
}
saveWorkbook(scott_xl, "/tmp/scott-easy-weedable.xlsx", overwrite = TRUE)
#+END_SRC


#+RESULTS:
| x |
|---|
| 1 |


* To note

+ Easy Weeder does not use acquisition year.  Low-circing multiple copies acquired within the last 5 years may need a human decision.
+ Easy Weeder does not remove duplicates across branches, but the same data can be used to do that. For example, /[[https://www.library.yorku.ca/find/Record/1172][Captains of Consciousness: Advertising and the Social Roots of the Consumer Culture]]/ has ten copies at three branches: Bronfman (7), Frost (1) and Scott (2).  Circulation in the circ window is: Bronfman (13), Frost (0), Scott (15).  Therefore Easy Weeder recommends this number of copies: Bronfman (2), Frost (1) and Scott (2).  Even if it makes sense to have the book at both Bronfman and Scott (which would need 3 copies to get down to a busy factor of 1), Frost does not need a copy, because no one has used it there since 2010.

# + [[https://www.library.yorku.ca/find/Record/1000076][A systolic array parallelizing compiler / Ping-Sheng Tseng]]: acquired in 1990, 0 circs.

* Commands

+ ~make~ :: prepare the Easy Weeder data
+ ~make get_data~ :: use locally to pull down production Easy Weeder data
+ ~make push_app~ :: use locally to push the Shiny app up to production

* Installation
