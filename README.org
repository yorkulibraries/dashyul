#+TITLE: DashYUL
#+AUTHOR: William Denton <wdenton@yorku.ca>

#+STARTUP: showall entitiespretty inlineimages
#+OPTIONS: toc:nil ^:nil

* About

Data dashboard for York University Libraries, and other interactive assessment and evaluation tools for library resources and services.

This is built and used by a devoted user of [[https://en.wikipedia.org/wiki/GNU_Emacs][Emacs]] and [[https://orgmode.org/][Org]]. Everything will work even if you don't use them, but it will all work /better/ if you do.

* Installation

Details to come.  Work in progress.

** Requirements

*** General

#+BEGIN_SRC shell :eval no
sudo apt install yaz
#+END_SRC

*** R

Some scripts are written in [[https://www.r-project.org/][R]] (I am using 3.4.3 right now), and [[https://shiny.rstudio.com/][Shiny]] (built in R) is how the dashboard works.

Packages required.

+ [[https://github.com/r-lib/devtools][devtools]]
+ [[https://rmarkdown.rstudio.com/flexdashboard/index.html][flexdashboard]]
+ +ggvis+
+ [[https://yihui.name/knitr/][knitr]]
+ [[https://cran.r-project.org/web/packages/RCurl/index.html][RCurl]]
+ [[https://cran.r-project.org/web/packages/roxygen2/index.html][roxygen2]]
+ [[https://github.com/rstudio/shiny/][shiny]]
+ the entire [[https://www.tidyverse.org/][tidyverse]]
+ [[https://github.com/yorkulibraries/yulr][yulr]]

(Some of those aren't actually needed; I will refine the list after testing.)

I use my [[https://github.com/wdenton/conforguration][Conforguration]] tool to get packages installed, but this will do it too:

#+BEGIN_SRC shell :eval no
sudo -i
PACKAGE_LIST="tidyverse devtools RCurl roxygen2 shiny flexdashboard knitr"
for PKG in $PACKAGE_LIST; do Rscript --vanilla -e "install.packages('$PKG', repos=c('https://cran.hafro.is/'))"; done
Rscript --vanilla -e "devtools::install_github('yorkulibraries/yulr')"
#+END_SRC

R and the packages need to be available system-wide to all users, including shiny.

*** Ruby

A lot of text munging and data cleaning is done in [[https://www.ruby-lang.org/en/][Ruby]]. (I am using version 2.5.0 right now.)

Some gems are required.  Ruby and the packages need to be available system-wide, not under RVM or rbenv.

#+BEGIN_SRC shell :eval no
sudo gem install marc nokogiri sqlite3 bundler ruby-oci8 rubyul
#+END_SRC

(We use Oracle, which is why we need the ~ruby-oci8~ gem; follow [[https://help.ubuntu.com/community/Oracle%2520Instant%2520Client][Oracle Instant Client]] instructions for how to get it working.)

*** Makefiles and shell scripts

There are a number of [[https://en.wikipedia.org/wiki/Makefile][makefiles]] and [[https://www.gnu.org/software/bash/][bash]] scripts.  If your system supports R and Ruby, it will have these.

** Configuration

Two environment variables are used to control where things are.

+ ~DASHYUL_HOME~ :: where this source tree is, locally
+ ~DASHYUL_DATA~ :: where the data is, locally
+ ~DASHYUL_SERVER_NAME~ :: hostname of the server
+ ~DASHYUL_SERVER_HOME~ :: where the data is, in production
+ ~DASHYUL_SERVER_DATA~ :: where the data is, in production

I have this in my ~.bashrc~:

#+BEGIN_EXAMPLE
source ~/.bashrc.dashyul.rc
#+END_EXAMPLE

Then my local ~.bash.dashyul.rc~, also in my home directory, is:

#+BEGIN_EXAMPLE
# LibStats: long-lived cookie so I can download data with curl
export LIBSTATS_LOGIN_COOKIE=12345678901234567890d6bff4ea7525

# DashYUL
export DASHYUL_HOME=~/src/dashyul
export DASHYUL_DATA=/usr/local/dashyul/data
export DASHYUL_SERVER_NAME=servername.library.yorku.ca
export DASHYUL_SERVER_HOME=/dashyul/src/dashyul
export DASHYUL_SERVER_DATA=/dashyul/data
#+END_EXAMPLE

On the server's ~.bash.dashyul.rc~, what was SERVER becomes local:

#+BEGIN_EXAMPLE
# LibStats: long-lived cookie so I can download data with curl
export LIBSTATS_LOGIN_COOKIE=12345678901234567890d6bff4ea7525

# DashYUL
export DASHYUL_HOME=/dashyul/src/dashyul
export DASHYUL_DATA=/dashyul/data
#+END_EXAMPLE

This source tree can be used locally or on the production server.  Data files are kept separate.

To set things up on your local machine, get this source tree and create your local data directory:

#+BEGIN_SRC shell :eval no
cd ~/src
git pull https://github.com/yorkulibraries/dashyul.git
cd dashyul
make setup_data_directories
#+END_SRC

To set things up on your production server, do something like:

#+BEGIN_SRC shell :eval no
sudo mkdir -p /dashyul/src/
sudo chown -R ${USER}:${USER} /dashyul/
cd /dashyul/src
git clone https://github.com/yorkulibraries/dashyul.git
cd dashyul
make setup_data_directories
#+END_SRC

* Guidelines

Notes to myself as I work on this.

+ Makefiles
  + ~make prepare~ should work anywhere and do whatever is necessary to prepare data for use
  + ~make copydata~ is for production, and copies data to a Shiny app's ~data~ folder
  + ~make publish~ is for local use, and pushes a Shiny app up to production
+ sources, data, viz
+ scripts/ and data/ directories
+ Rely on ~DASHYUL_HOME~ and ~DASHYUL_DATA~.
+ Use ~_file~ and ~_dir~ suffixes when storing file and directory names in variables.
+ Have a README.org for every source and viz to explain what they are.  Need to explain all the data somewhere, too.

* License

GPL v3.  See [[file:LICENSE][LICENSE]].
